/**
 * Created by emanuelegragnoli on 28/01/16.
 */

var self=module.exports = {

    /**
     * @name function getItemMsgTxt
     * @param item object
     * @desc
     * @return String
     */
    getItemMsgTxt : function (item, row,trad) {

    var msg_txt = '';

    //console.log(item);
    if (item.LargeImage && item.LargeImage.URL)
        msg_txt += "[‌‌ ](" + item.LargeImage.URL + ")";

    msg_txt += "\n*" + item.ItemAttributes.Title + "*";
    msg_txt += "\n▶️ [ " + trad[row.lang].detail + " ](" + item.DetailPageURL + ")";
    if (item.CustomerReviews && item.CustomerReviews.IFrameURL)
        msg_txt += "\n⭐️[ " + trad[row.lang].review + " ](" + item.DetailPageURL + ")";
    //msg_txt+=" - [🌐]("+item.DetailPageURL+") ";
    //msg_txt+="\n\n"+args.star+" ⭐️";
    if (item.Offers && item.Offers.Offer && item.Offers.Offer.OfferListing) {
        msg_txt += "\n\n*" + trad[row.lang].price + "*: " + item.Offers.Offer.OfferListing.Price.FormattedPrice;
        //console.log(prod.title+" - "+args.price.length)
        if (item.Offers && item.Offers.Offer && item.Offers.Offer.OfferListing && item.Offers.Offer.OfferListing.IsEligibleForPrime) {
            //console.log("PRIME")
            msg_txt += " - ✓Prime"
        }
        msg_txt += "\n  _" + item.Offers.Offer.OfferListing.Availability + "_";
    }

    //console.log(item.Offers);
    msg_txt += "\n"
    if (item.OfferSummary && item.OfferSummary.LowestNewPrice && item.OfferSummary.LowestNewPrice.Amount) {
        msg_txt += "\n*" + trad[row.lang].new + ":* " + item.OfferSummary.LowestNewPrice.FormattedPrice + " (" + item.OfferSummary.TotalNew + ")";
    }
    if (item.OfferSummary && item.OfferSummary.LowestUsedPrice && item.OfferSummary.LowestUsedPrice.Amount) {
        msg_txt += "\n*" + trad[row.lang].used + ":* " + item.OfferSummary.LowestUsedPrice.FormattedPrice + " (" + item.OfferSummary.TotalUsed + ")";
    }

    msg_txt = msg_txt.substring(0, msg_txt.lastIndexOf(')') + 1)
    return msg_txt;

    },

    /**
     * @name function getItemFeatureTxt
     * @param item object
     * @desc
     * @return String
     */
    getItemFeatureTxt : function (item, row,trad) {

        var feature_txt = '';
        if (item.ItemAttributes.Feature) {
            feature_txt += trad[row.lang].featuresTitle;
            if (item.ItemAttributes.Feature.length > 0) {
                for (var i = 0; i < item.ItemAttributes.Feature.length; i++) {
                    feature_txt += "\n🔹" + item.ItemAttributes.Feature[i];
                }
            }
        }
        feature_txt = feature_txt.substring(0, 175);
        feature_txt += "\n ...";


        //console.log("feature.length: "+feature_txt.length);

        //msg_txt+="\n\n [‌‌Price tracking by Keepa]("+keepaUrl+item.ASIN+keepaDomain+")";
        /*if(item.ItemAttributes.ProductTypeName=="PHONE"){
         var gsma_query = msg.query;
         gsma_query.replace(/\s/g, '+');
         msg_txt+="\n\n [‌‌GSMArena info]("+gsmarena+gsma_query+")"
         }*/

        return feature_txt;

    },

    /**
     * @name function getItemDesc
     * @param item object
     * @desc
     * @return String
     */
    getItemDesc : function (item, row,trad) {
        var desc = '';
        /*if (item.Offers && item.Offers.Offer != null && item.Offers.Offer.OfferListing != null) {
         desc += trad[row.lang].price+": " + item.Offers.Offer.OfferListing.Price.FormattedPrice;
         }*/
        if (item.OfferSummary && item.OfferSummary.LowestNewPrice)
            desc += trad[row.lang].new + ":" + item.OfferSummary.LowestNewPrice.FormattedPrice + " (" + item.OfferSummary.TotalNew + ")";
        if (item.OfferSummary && item.OfferSummary.LowestUsedPrice && item.OfferSummary.LowestUsedPrice.Amount) {
            desc += " - " + trad[row.lang].used + ": " + item.OfferSummary.LowestUsedPrice.FormattedPrice + " (" + item.OfferSummary.TotalUsed + ")";
        }
        if (item.Offers && item.Offers.Offer && item.Offers.Offer.OfferListing && item.Offers.Offer.OfferListing.IsEligibleForPrime) {
            desc += " ✓Prime"
        }

        return desc;

    },

    /**
     * @name function newUserAlert
     * @param msg string
     * @desc this function send msg to answerInlineQuery for lang choice
     */
    newUserAlert : function(msg,regionsId,trad,bot,languagesList){
        var itemsList = [];
        console.log("newUserAlert")
        // RESULT User not defined
        regionsId.forEach(function(region){
            var itemObj = {};
            itemObj.parse_mode = 'Markdown';
            itemObj.type = 'article';
            itemObj.id = region;
            itemObj.title = trad[region].setLocTitle;
            itemObj.description = trad[region].setLocDesc;
            itemObj.message_text = trad[region].hi+' '+msg.from.first_name+' '+trad[region].welcome+languagesList;

            itemsList.push(itemObj);
        });


        bot.answerInlineQuery(msg.id, itemsList,{"cache_time" : 0, "is_personal":true});
    },

    /**
     * @name function setLoc
     * @param res message of query
     * @param lang language chose for the query
     * @desc this function set the default language from chosen_inline_result
     */
    setLoc : function(res, lang, db){
        var userid = res.from.id;
        db.run("INSERT INTO users VALUES ($id,$lang)", {
            $id: userid,
            $lang: lang
        }, function(err){
            if(err){
                db.run("UPDATE users SET lang = $lang WHERE user_id = $id", {
                    $id: userid,
                    $lang: lang
                });
            }
        });
    },

    /**
     * @name function setLang
     * @param msg message of inline query
     * @param lang language chosen to set as default
     * @desc this function set the default language
     */
    setLang : function(msg, lang, inline,db,bot,trad){
        var userid = msg.from.id;
        console.log("user: "+userid+" lang: "+lang);
        //var stmt = db.prepare();
        db.run("INSERT INTO users VALUES ($id,$lang)", {
            $id: userid,
            $lang: lang
        }, function(err){
            if(err){
                db.run("UPDATE users SET lang = $lang WHERE user_id = $id", {
                    $id: userid,
                    $lang: lang
                });
            }
            if(!inline) // if inline there's no msg.chat.id, it returns results
                bot.sendMessage(msg.chat.id, trad[lang].langSelected+" "+lang, {"parse_mode":"Markdown"});
            else {
                var itemObj={},itemsList=[];
                // RESULT
                itemObj.parse_mode = 'Markdown';
                itemObj.type = 'article';
                itemObj.id = 'id:' + (process.hrtime());
                itemObj.title = trad[lang].langSelected;
                itemObj.description = trad[lang].defaultLocale;
                itemObj.message_text = trad[lang].defaultLocaleTxtInline;

                itemsList.push(itemObj);

                bot.answerInlineQuery(msg.id, itemsList, {"parse_mode":"Markdown", "cache_time" : 0});

            }
        });
    },

    /**
     * @name function provideResult
     * @param msg message that rappresent search key
     * @param row rappresent result set
     * @desc this function does a amazon search
     * */
    provideResult : function(msg,row,regions,trad,aws,awscred,bot,db){
        var fin = "";
        regions.forEach(function(o){if(o.id==row.lang){fin=o.code;}});
        console.log(fin)
        var options = {
            host: "webservices.amazon."+fin,
            version: "2011-08-01"
        };

        options.region=row.lang.toUpperCase();

        var prod = aws.createProdAdvClient(awscred.keyid, awscred.key, awscred.tag, options);

        if(msg.query.length<=0) {

            console.log("ZERO SEARCH")
            var itemObj = {},
                itemsList = [];
            // RESULT
            itemObj.parse_mode = 'Markdown';
            itemObj.type = 'article';
            itemObj.id = 'id:' + (process.hrtime());
            itemObj.title = msg.from.first_name+", "+trad[row.lang].queryZeroTitle;
            itemObj.description = trad[row.lang].queryZeroDesc;
            itemObj.message_text = trad[row.lang].queryZeroTxt;

            itemsList.push(itemObj);

            bot.answerInlineQuery(msg.id, itemsList, {"cache_time" : 30,  "is_personal":true});
        }else{
            prod.call("ItemSearch", {
                SearchIndex: "All",
                Keywords: msg.query,
                ResponseGroup: "Offers,ItemAttributes,Images,Reviews"
            }, function (err, result) {
                if(result && result.Items && result.Items.Item && result.Items.Item.length>0){

                    var itemsList = [];
                    //console.log(JSON.stringify(result));
                    result.Items.Item.forEach(function (item) {

                        var itemObj = {};

                        ///// ITEM MSG TXT
                        var msg_txt=self.getItemMsgTxt(item,row,trad),
                        ///// ITEM FEATURE TXT
                            feature_txt=self.getItemFeatureTxt(item,row,trad),
                        ///// ITEM DESCRIPTION
                            desc=self.getItemDesc(item,row,trad);

                        // RESULT
                        itemObj.parse_mode = 'Markdown';
                        itemObj.type = 'article';
                        itemObj.id = 'id:'+(process.hrtime());
                        itemObj.title = item.ItemAttributes.Title;
                        itemObj.description = desc;
                        itemObj.url = item.DetailPageURL;
                        itemObj.message_text = msg_txt+feature_txt;
                        if(item.SmallImage && item.SmallImage.URL)
                            itemObj.thumb_url = item.SmallImage.URL;
                        itemObj.url = item.DetailPageURL;
                        itemObj.hide_url = true;
                        itemObj.thumb_width = 150;
                        itemObj.thumb_height = 150;
                        itemObj.disable_web_page_preview = false;

                        itemsList.push(itemObj);
                    });

                    db.run("INSERT INTO user_queries (user, query )VALUES ($user,$query)",{
                        $user: row.user_id,
                        $query: msg.query
                    });
                    //bot.sendMessage(msg.chat.id, item.MediumImage.URL)
                    //console.log(msg)
                    bot.answerInlineQuery(msg.id, itemsList, {"cache_time" : /*3*/0,  "is_personal":true});
                    //Save query


                }else{
                    console.log("no item found")
                    var itemObj = {},
                        itemsList = [];
                    // RESULT
                    itemObj.parse_mode = 'Markdown';
                    itemObj.type = 'article';
                    itemObj.id = 'id:' + (process.hrtime());
                    itemObj.title = trad[row.lang].noResultTitle+" 😔"//;msg.from.first_name+", "+trad[row.lang].queryZeroTitle;
                    itemObj.description = trad[row.lang].noResultDesc;//[row.lang].queryZeroDesc;
                    itemObj.message_text = trad[row.lang].noResultDesc;//trad[row.lang].queryZeroTxt;


                    itemsList.push(itemObj);
                    bot.answerInlineQuery(msg.id, itemsList, {"cache_time" : 0/*600*/,  "is_personal":true});

                }

            });
        }
    },

    /**
     * @name function fastSearchResult
     * @param msg message of query
     * @param lang language chose for the query
     * @desc this function do a fast search by setting on the fly the lang
     */
    fastSearchResult : function(msg,lang,regions,trad,aws,awscred,bot){
        console.log("fastSearchResult: "+msg.query+" - "+(msg.query.length>0))
        var fin;
        regions.forEach(function(o){if(o.id==lang){fin=o.code;}});

        var options = {
            host: "webservices.amazon."+fin,
            version: "2011-08-01"
        };

        options.region=lang.toUpperCase();

        var prod = aws.createProdAdvClient(awscred.keyid, awscred.key, awscred.tag, options);
        console.log("FIN: "+"it")


        if(msg.query.length<=0) {
            console.log("ZERO")

            var itemObj = {},
                itemsList = [];
            // RESULT
            itemObj.parse_mode = 'Markdown';
            itemObj.type = 'article';
            itemObj.id = 'id:' + (process.hrtime());
            itemObj.title = trad[lang].queryZeroTitle;
            itemObj.description = trad[lang].queryZeroDesc;
            itemObj.message_text = trad[lang].queryZeroTxt;

            itemsList.push(itemObj);

            bot.answerInlineQuery(msg.id, itemsList, {"cache_time" : 0});
        }else{
            //console.log("calling product search")
            prod.call("ItemSearch", {
                SearchIndex: "All",
                Keywords: msg.query,
                ResponseGroup: "Offers,ItemAttributes,Images,Reviews"
            }, function (err, result) {
                //console.log("result")
                if(result && result.Items && result.Items.Item && result.Items.Item && result.Items.Item.length>0){

                    var itemsList = [];
                    //console.log(JSON.stringify(result));
                    result.Items.Item.forEach(function (item) {

                        var itemObj = {};
                        var keepaUrl = "https://dyn.keepa.com/pricehistory.png?asin=";
                        var keepaDomain = "&domain=it";

                        var msg_txt = '';

                        if(item.LargeImage && item.LargeImage.URL)
                            msg_txt += "[‌‌ ](" + item.LargeImage.URL + ")";

                        msg_txt += "\n*" + item.ItemAttributes.Title + "*";
                        //console.log(item.ItemAttributes);

                        //msg_txt+=" - [🌐]("+item.DetailPageURL+") ";
                        //msg_txt+="\n\n"+args.star+" ⭐️";
                        if (item.Offers && item.Offers.Offer && item.Offers.Offer.OfferListing && item.Offers.Offer.OfferListing.Price) {
                            msg_txt += "\n\n*"+trad[lang].price+"*: " + item.Offers.Offer.OfferListing.Price.FormattedPrice + " - ";
                            //console.log(prod.title+" - "+args.price.length)
                            msg_txt += "_" + item.Offers.Offer.OfferListing.Availability + "_";
                        }
                        if (item.IsEligibleForPrime) {
                            msg_txt += " - ✔️Prime"
                        }

                        if (item.OfferSummary && item.OfferSummary.LowestNewPrice && item.OfferSummary.LowestNewPrice.Amount) {
                            msg_txt += "\n  *"+trad[lang].new+":* " + item.OfferSummary.LowestNewPrice.FormattedPrice + " (" + item.OfferSummary.TotalNew + ")";
                        }
                        if (item.OfferSummary && item.OfferSummary.LowestUsedPrice && item.OfferSummary.LowestUsedPrice.Amount) {
                            msg_txt += "\n  *"+trad[lang].used+":* " + item.OfferSummary.LowestUsedPrice.FormattedPrice + " (" + item.OfferSummary.TotalUsed + ")";
                        }

                        //msg_txt+="\n\n\[‌‌Price tracking by Keepa]("+keepaUrl+item.asin+keepaDomain+")";

                        ///// DESCRIPTION
                        var desc = "";
                        if (item.Offers && item.Offers.Offer && item.Offers.Offer.OfferListing ) {
                            desc += trad[lang].price+": " + item.Offers.Offer.OfferListing.Price.FormattedPrice;
                        }
                        if (item.OfferSummary && item.OfferSummary.LowestNewPrice)
                            desc += " - "+trad[lang].new+":" + item.OfferSummary.LowestNewPrice.FormattedPrice + " (" + item.OfferSummary.TotalNew + ")";
                        if (item.IsEligibleForPrime == 1) {
                            desc += " - ✔️Prime"
                        }

                        // RESULT
                        itemObj.parse_mode = 'Markdown';
                        itemObj.type = 'article';
                        itemObj.id = 'id:' + (process.hrtime());
                        itemObj.title = item.ItemAttributes.Title;
                        itemObj.description = desc.substring(0,511);
                        itemObj.message_text = msg_txt;
                        if(item.SmallImage && item.SmallImage.URL)
                            itemObj.thumb_url = item.SmallImage.URL;
                        else
                            itemObj.thumb_url = "";
                        itemObj.thumb_width = 100;
                        itemObj.thumb_height = 100;
                        itemObj.disable_web_page_preview = false;

                        itemsList.push(itemObj);
                    });

                    //bot.sendMessage(msg.chat.id, item.MediumImage.URL)
                    //console.log(msg)
                    bot.answerInlineQuery(msg.id, itemsList, {"cache_time" : /*10*/0});


                }else{
                    //console.log("no item found")

                }
            })
        }
    }

}



